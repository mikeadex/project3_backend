# Generated by Django 5.1.5 on 2025-01-22 10:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CVDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF Document"),
                            ("docx", "Word Document"),
                            ("linkedin", "LinkedIn profile"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="cv_documents/"),
                ),
                ("linkedin_profile_url", models.URLField(blank=True, null=True)),
                ("original_text", models.TextField(blank=True, null=True)),
                ("parsed_data", models.JSONField(blank=True, null=True)),
                (
                    "parsing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=25,
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                ("is_training_data", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cv_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParsingMetaData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "processing_time",
                    models.FloatField(help_text="Time taken to parse in seconds"),
                ),
                (
                    "confidence_score",
                    models.FloatField(help_text="Confidence score of parsing results"),
                ),
                (
                    "extracted_fields",
                    models.JSONField(help_text="List of successfully extracted fields"),
                ),
                (
                    "model_version",
                    models.CharField(
                        help_text="Version of the parsing model used", max_length=50
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "cv_document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parsing_metadata",
                        to="cv_parser.cvdocument",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
